-- PROGRESSION - 1


-- 1. **Create table city**
CREATE TABLE CITY(
ID INT, NAME VARCHAR(50) NOT NULL,
CONSTRAINT CITY_PK PRIMARY KEY(ID)
);


-- 2. **Create table referee**

CREATE TABLE REFEREE(
ID INT, NAME VARCHAR(50) NOT NULL,
CONSTRAINT REFEREE_PK PRIMARY KEY(ID)
);

-- 3. **Create table innings**
CREATE TABLE INNINGS(
ID INT, INNINGS_NUMBER INT NOT NULL,
CONSTRAINT INNINGS_PK PRIMARY KEY(ID)
);

-- 4. **Create table extra_type**

CREATE TABLE EXTRA_TYPE(
ID INT, NAME VARCHAR(50) NOT NULL,
CONSTRAINT EXTRA_TYPE_PK PRIMARY KEY(ID)
)

-- 5. **Create table skill**
CREATE TABLE SKILL(
ID INT, NAME VARCHAR(50) NOT NULL,
CONSTRAINT SKILL_PK PRIMARY KEY(ID)
);
-- 6. **Create table team**

CREATE TABLE TEAM(
ID INT, NAME VARCHAR(50) NOT NULL,
COACH VARCHAR(50) NOT NULL, 
HOME_CITY INT NOT NULL,
CAPTION INT NOT NULL,
CONSTRAINT TEAM_PK PRIMARY KEY(ID),
constraint FK_TEAM_HOME_CITY foreign key (HOME_CITY) 
      references CITY (ID) 
);
-- 7. **Create table player**

CREATE TABLE PLAYER(
ID INT, NAME VARCHAR(50) NOT NULL,
COUNTRY VARCHAR(50) NOT NULL,
SKILL_ID INT NOT NULL,
TEAM_ID INT NOT NULL,
CONSTRAINT PLAYER_PK PRIMARY KEY(ID),
CONSTRAINT FK_PLAYER_SKILL_ID FOREIGN KEY (SKILL_ID) REFERENCES SKILL(ID),
CONSTRAINT FK_PLAYER_TEAM_ID FOREIGN KEY (TEAM_ID) REFERENCES TEAM(ID)
);
-- 8. **Create table venue**
CREATE TABLE VENUE(
ID INT, STADIUM_NAME VARCHAR(50) NOT NULL,
CITY_ID INT NOT NULL,
CONSTRAINT VENUE_PK PRIMARY KEY(ID),
CONSTRAINT FK_VENUE_CITY_ID FOREIGN KEY (CITY_ID) REFERENCES CITY(ID)
);
-- 9. **Create table event**
CREATE TABLE EVENT(
ID INT, INNINGS_ID INT NOT NULL,
EVENT_NO INT NOT NULL, RAIDER_ID INT NOT NULL,
RAID_POINTS INT NOT NULL, DEFENDING_POINTS INT NOT NULL,
CLOCK_IN_SECONDS INT NOT NULL, TEAM_ONE_SCORE INT NOT NULL,
TEAM_TWO_SCORE INT NOT NULL,
CONSTRAINT EVENT_PK PRIMARY KEY(ID),
CONSTRAINT  FK_EVENT_INNINGS_ID FOREIGN KEY (INNINGS_ID) REFERENCES INNINGS(ID),
CONSTRAINT  FK_EVENT_RAIDER_ID FOREIGN KEY (RAIDER_ID) REFERENCES PLAYER(ID)
);

-- 10. **Create table extra_event**

CREATE TABLE EXTRA_EVENT(
ID INT, EVENT_ID INT NOT NULL,
EXTRA_TYPE_ID INT NOT NULL,
POINTS INT NOT NULL,
SCORING_TEAM_ID INT NOT NULL,
CONSTRAINT EXTRA_EVENT_PK PRIMARY KEY(ID),
CONSTRAINT FK_EXTRA_EVENT_EVENT_ID FOREIGN KEY (EVENT_ID) REFERENCES EVENT(ID),
CONSTRAINT FK_EXTRA_EVENT_EXTRA_TYPE_ID FOREIGN KEY (EXTRA_TYPE_ID) REFERENCES EXTRA_TYPE(ID),
CONSTRAINT FK_EXTRA_EVENT_SCORING_TEAM_ID FOREIGN KEY (SCORING_TEAM_ID) REFERENCES TEAM(ID)
);
-- 11. **Create table outcome**
CREATE TABLE OUTCOME(
ID INT, STATUS VARCHAR(100) NOT NULL,
WINNER_TEAM_ID INT,SCORE INT,
PLAYER_OF_MATCH INT,
CONSTRAINT OUTCOME_PK PRIMARY KEY (ID),
CONSTRAINT FK_OUTCOME_WINNER_TEAM_ID FOREIGN KEY (WINNER_TEAM_ID) REFERENCES TEAM(ID),
CONSTRAINT FK_OUTCOME_PLAYER_OF_MATCH FOREIGN KEY (PLAYER_OF_MATCH) REFERENCES PLAYER(ID)
);
-- 12. **Create table game**

CREATE TABLE GAME(
ID INT,GAME_DATE DATE NOT NULL,
TEAM_ID_1 INT NOT NULL, 
TEAM_ID_2 INT NOT NULL,
VENUE_ID INT NOT NULL,
OUTCOME_ID INT NOT NULL,
REFEREE_ID_1 INT NOT NULL,
REFEREE_ID_2 INT NOT NULL,
FIRST_INNINGS_ID INT NOT NULL,
SECOND_INNINGS_ID INT NOT NULL,
CONSTRAINT GAME_PK PRIMARY KEY(ID),
CONSTRAINT FK_GAME_TEAM_ID_1 FOREIGN KEY (TEAM_ID_1) REFERENCES TEAM(ID),
CONSTRAINT FK_GAME_TEAM_ID_2 FOREIGN KEY (TEAM_ID_2) REFERENCES TEAM(ID),
CONSTRAINT FK_GAME_VENUE_ID FOREIGN KEY (VENUE_ID) REFERENCES VENUE(ID),
CONSTRAINT FK_GAME_OUTCOME_ID FOREIGN KEY (OUTCOME_ID) REFERENCES OUTCOME(ID),
CONSTRAINT FK_GAME_REFEREE_ID_1 FOREIGN KEY (REFEREE_ID_1) REFERENCES REFEREE(ID),
CONSTRAINT FK_GAME_REFEREE_ID_2 FOREIGN KEY (REFEREE_ID_2) REFERENCES REFEREE(ID),
CONSTRAINT FK_GAME_FIRST_INNINGS_ID FOREIGN KEY (FIRST_INNINGS_ID) REFERENCES INNINGS(ID),
CONSTRAINT FK_GAME_SECOND_INNINGS_ID FOREIGN KEY (SECOND_INNINGS_ID) REFERENCES INNINGS(ID)
);
-- 13. **Drop table city**
DROP TABLE CITY;
-- 14. **Drop table innings**
DROP TABLE INNINGS;
-- 15. **Drop table skill**
DROP TABLE SKILL;
-- 16. **Drop table extra_type**
DROP TABLE EXTRA_TYPE;

commit;